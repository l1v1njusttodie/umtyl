// Generated by view binder compiler. Do not edit!
package com.example.umtyl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umtyl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button LoginBtn;

  @NonNull
  public final TextView createTw;

  @NonNull
  public final EditText emailEt;

  @NonNull
  public final TextView forgotTw;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final EditText passwordEt;

  @NonNull
  public final TextView textView2;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button LoginBtn,
      @NonNull TextView createTw, @NonNull EditText emailEt, @NonNull TextView forgotTw,
      @NonNull ImageView imageView, @NonNull ImageView imageView2, @NonNull EditText passwordEt,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.LoginBtn = LoginBtn;
    this.createTw = createTw;
    this.emailEt = emailEt;
    this.forgotTw = forgotTw;
    this.imageView = imageView;
    this.imageView2 = imageView2;
    this.passwordEt = passwordEt;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LoginBtn;
      Button LoginBtn = ViewBindings.findChildViewById(rootView, id);
      if (LoginBtn == null) {
        break missingId;
      }

      id = R.id.create_tw;
      TextView createTw = ViewBindings.findChildViewById(rootView, id);
      if (createTw == null) {
        break missingId;
      }

      id = R.id.emailEt;
      EditText emailEt = ViewBindings.findChildViewById(rootView, id);
      if (emailEt == null) {
        break missingId;
      }

      id = R.id.forgot_tw;
      TextView forgotTw = ViewBindings.findChildViewById(rootView, id);
      if (forgotTw == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.passwordEt;
      EditText passwordEt = ViewBindings.findChildViewById(rootView, id);
      if (passwordEt == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, LoginBtn, createTw, emailEt,
          forgotTw, imageView, imageView2, passwordEt, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
